// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jsbn_bc.proto

#ifndef PROTOBUF_jsbn_5fbc_2eproto__INCLUDED
#define PROTOBUF_jsbn_5fbc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace jsbn {
namespace protoc {
namespace bc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_jsbn_5fbc_2eproto();
void protobuf_AssignDesc_jsbn_5fbc_2eproto();
void protobuf_ShutdownFile_jsbn_5fbc_2eproto();

class RegisterRequest;
class RegisterResponse;
class NetProtocol;

enum CommandID {
  Heart_Beat = 0,
  Register_Request = 4097,
  Register_Response = 4098
};
bool CommandID_IsValid(int value);
const CommandID CommandID_MIN = Heart_Beat;
const CommandID CommandID_MAX = Register_Response;
const int CommandID_ARRAYSIZE = CommandID_MAX + 1;

// ===================================================================

class RegisterRequest : public ::google::protobuf::MessageLite {
 public:
  RegisterRequest();
  virtual ~RegisterRequest();

  RegisterRequest(const RegisterRequest& from);

  inline RegisterRequest& operator=(const RegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RegisterRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RegisterRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RegisterRequest* other);

  // implements Message ----------------------------------------------

  RegisterRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RegisterRequest& from);
  void MergeFrom(const RegisterRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 cityID = 1;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:jsbn.protoc.bc.RegisterRequest)
 private:
  inline void set_has_cityid();
  inline void clear_has_cityid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cityid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_jsbn_5fbc_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_jsbn_5fbc_2eproto();
  #endif
  friend void protobuf_AssignDesc_jsbn_5fbc_2eproto();
  friend void protobuf_ShutdownFile_jsbn_5fbc_2eproto();

  void InitAsDefaultInstance();
  static RegisterRequest* default_instance_;
};
// -------------------------------------------------------------------

class RegisterResponse : public ::google::protobuf::MessageLite {
 public:
  RegisterResponse();
  virtual ~RegisterResponse();

  RegisterResponse(const RegisterResponse& from);

  inline RegisterResponse& operator=(const RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RegisterResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RegisterResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RegisterResponse* other);

  // implements Message ----------------------------------------------

  RegisterResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RegisterResponse& from);
  void MergeFrom(const RegisterResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string error_description = 2;
  inline bool has_error_description() const;
  inline void clear_error_description();
  static const int kErrorDescriptionFieldNumber = 2;
  inline const ::std::string& error_description() const;
  inline void set_error_description(const ::std::string& value);
  inline void set_error_description(const char* value);
  inline void set_error_description(const char* value, size_t size);
  inline ::std::string* mutable_error_description();
  inline ::std::string* release_error_description();
  inline void set_allocated_error_description(::std::string* error_description);

  // @@protoc_insertion_point(class_scope:jsbn.protoc.bc.RegisterResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_error_description();
  inline void clear_has_error_description();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_description_;
  ::google::protobuf::uint32 result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_jsbn_5fbc_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_jsbn_5fbc_2eproto();
  #endif
  friend void protobuf_AssignDesc_jsbn_5fbc_2eproto();
  friend void protobuf_ShutdownFile_jsbn_5fbc_2eproto();

  void InitAsDefaultInstance();
  static RegisterResponse* default_instance_;
};
// -------------------------------------------------------------------

class NetProtocol : public ::google::protobuf::MessageLite {
 public:
  NetProtocol();
  virtual ~NetProtocol();

  NetProtocol(const NetProtocol& from);

  inline NetProtocol& operator=(const NetProtocol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const NetProtocol& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NetProtocol* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NetProtocol* other);

  // implements Message ----------------------------------------------

  NetProtocol* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NetProtocol& from);
  void MergeFrom(const NetProtocol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .jsbn.protoc.bc.CommandID commandID = 1;
  inline bool has_commandid() const;
  inline void clear_commandid();
  static const int kCommandIDFieldNumber = 1;
  inline ::jsbn::protoc::bc::CommandID commandid() const;
  inline void set_commandid(::jsbn::protoc::bc::CommandID value);

  // optional .jsbn.protoc.bc.RegisterRequest registerRequest = 2;
  inline bool has_registerrequest() const;
  inline void clear_registerrequest();
  static const int kRegisterRequestFieldNumber = 2;
  inline const ::jsbn::protoc::bc::RegisterRequest& registerrequest() const;
  inline ::jsbn::protoc::bc::RegisterRequest* mutable_registerrequest();
  inline ::jsbn::protoc::bc::RegisterRequest* release_registerrequest();
  inline void set_allocated_registerrequest(::jsbn::protoc::bc::RegisterRequest* registerrequest);

  // optional .jsbn.protoc.bc.RegisterResponse registerResponse = 3;
  inline bool has_registerresponse() const;
  inline void clear_registerresponse();
  static const int kRegisterResponseFieldNumber = 3;
  inline const ::jsbn::protoc::bc::RegisterResponse& registerresponse() const;
  inline ::jsbn::protoc::bc::RegisterResponse* mutable_registerresponse();
  inline ::jsbn::protoc::bc::RegisterResponse* release_registerresponse();
  inline void set_allocated_registerresponse(::jsbn::protoc::bc::RegisterResponse* registerresponse);

  // @@protoc_insertion_point(class_scope:jsbn.protoc.bc.NetProtocol)
 private:
  inline void set_has_commandid();
  inline void clear_has_commandid();
  inline void set_has_registerrequest();
  inline void clear_has_registerrequest();
  inline void set_has_registerresponse();
  inline void clear_has_registerresponse();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::jsbn::protoc::bc::RegisterRequest* registerrequest_;
  ::jsbn::protoc::bc::RegisterResponse* registerresponse_;
  int commandid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_jsbn_5fbc_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_jsbn_5fbc_2eproto();
  #endif
  friend void protobuf_AssignDesc_jsbn_5fbc_2eproto();
  friend void protobuf_ShutdownFile_jsbn_5fbc_2eproto();

  void InitAsDefaultInstance();
  static NetProtocol* default_instance_;
};
// ===================================================================


// ===================================================================

// RegisterRequest

// required fixed32 cityID = 1;
inline bool RegisterRequest::has_cityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterRequest::set_has_cityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterRequest::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterRequest::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 RegisterRequest::cityid() const {
  // @@protoc_insertion_point(field_get:jsbn.protoc.bc.RegisterRequest.cityID)
  return cityid_;
}
inline void RegisterRequest::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
  // @@protoc_insertion_point(field_set:jsbn.protoc.bc.RegisterRequest.cityID)
}

// -------------------------------------------------------------------

// RegisterResponse

// required fixed32 result = 1;
inline bool RegisterResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 RegisterResponse::result() const {
  // @@protoc_insertion_point(field_get:jsbn.protoc.bc.RegisterResponse.result)
  return result_;
}
inline void RegisterResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:jsbn.protoc.bc.RegisterResponse.result)
}

// optional string error_description = 2;
inline bool RegisterResponse::has_error_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterResponse::set_has_error_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterResponse::clear_has_error_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterResponse::clear_error_description() {
  if (error_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_->clear();
  }
  clear_has_error_description();
}
inline const ::std::string& RegisterResponse::error_description() const {
  // @@protoc_insertion_point(field_get:jsbn.protoc.bc.RegisterResponse.error_description)
  return *error_description_;
}
inline void RegisterResponse::set_error_description(const ::std::string& value) {
  set_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_ = new ::std::string;
  }
  error_description_->assign(value);
  // @@protoc_insertion_point(field_set:jsbn.protoc.bc.RegisterResponse.error_description)
}
inline void RegisterResponse::set_error_description(const char* value) {
  set_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_ = new ::std::string;
  }
  error_description_->assign(value);
  // @@protoc_insertion_point(field_set_char:jsbn.protoc.bc.RegisterResponse.error_description)
}
inline void RegisterResponse::set_error_description(const char* value, size_t size) {
  set_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_ = new ::std::string;
  }
  error_description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:jsbn.protoc.bc.RegisterResponse.error_description)
}
inline ::std::string* RegisterResponse::mutable_error_description() {
  set_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:jsbn.protoc.bc.RegisterResponse.error_description)
  return error_description_;
}
inline ::std::string* RegisterResponse::release_error_description() {
  clear_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_description_;
    error_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RegisterResponse::set_allocated_error_description(::std::string* error_description) {
  if (error_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_description_;
  }
  if (error_description) {
    set_has_error_description();
    error_description_ = error_description;
  } else {
    clear_has_error_description();
    error_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:jsbn.protoc.bc.RegisterResponse.error_description)
}

// -------------------------------------------------------------------

// NetProtocol

// required .jsbn.protoc.bc.CommandID commandID = 1;
inline bool NetProtocol::has_commandid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetProtocol::set_has_commandid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetProtocol::clear_has_commandid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetProtocol::clear_commandid() {
  commandid_ = 0;
  clear_has_commandid();
}
inline ::jsbn::protoc::bc::CommandID NetProtocol::commandid() const {
  // @@protoc_insertion_point(field_get:jsbn.protoc.bc.NetProtocol.commandID)
  return static_cast< ::jsbn::protoc::bc::CommandID >(commandid_);
}
inline void NetProtocol::set_commandid(::jsbn::protoc::bc::CommandID value) {
  assert(::jsbn::protoc::bc::CommandID_IsValid(value));
  set_has_commandid();
  commandid_ = value;
  // @@protoc_insertion_point(field_set:jsbn.protoc.bc.NetProtocol.commandID)
}

// optional .jsbn.protoc.bc.RegisterRequest registerRequest = 2;
inline bool NetProtocol::has_registerrequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetProtocol::set_has_registerrequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetProtocol::clear_has_registerrequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetProtocol::clear_registerrequest() {
  if (registerrequest_ != NULL) registerrequest_->::jsbn::protoc::bc::RegisterRequest::Clear();
  clear_has_registerrequest();
}
inline const ::jsbn::protoc::bc::RegisterRequest& NetProtocol::registerrequest() const {
  // @@protoc_insertion_point(field_get:jsbn.protoc.bc.NetProtocol.registerRequest)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return registerrequest_ != NULL ? *registerrequest_ : *default_instance().registerrequest_;
#else
  return registerrequest_ != NULL ? *registerrequest_ : *default_instance_->registerrequest_;
#endif
}
inline ::jsbn::protoc::bc::RegisterRequest* NetProtocol::mutable_registerrequest() {
  set_has_registerrequest();
  if (registerrequest_ == NULL) registerrequest_ = new ::jsbn::protoc::bc::RegisterRequest;
  // @@protoc_insertion_point(field_mutable:jsbn.protoc.bc.NetProtocol.registerRequest)
  return registerrequest_;
}
inline ::jsbn::protoc::bc::RegisterRequest* NetProtocol::release_registerrequest() {
  clear_has_registerrequest();
  ::jsbn::protoc::bc::RegisterRequest* temp = registerrequest_;
  registerrequest_ = NULL;
  return temp;
}
inline void NetProtocol::set_allocated_registerrequest(::jsbn::protoc::bc::RegisterRequest* registerrequest) {
  delete registerrequest_;
  registerrequest_ = registerrequest;
  if (registerrequest) {
    set_has_registerrequest();
  } else {
    clear_has_registerrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:jsbn.protoc.bc.NetProtocol.registerRequest)
}

// optional .jsbn.protoc.bc.RegisterResponse registerResponse = 3;
inline bool NetProtocol::has_registerresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetProtocol::set_has_registerresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NetProtocol::clear_has_registerresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NetProtocol::clear_registerresponse() {
  if (registerresponse_ != NULL) registerresponse_->::jsbn::protoc::bc::RegisterResponse::Clear();
  clear_has_registerresponse();
}
inline const ::jsbn::protoc::bc::RegisterResponse& NetProtocol::registerresponse() const {
  // @@protoc_insertion_point(field_get:jsbn.protoc.bc.NetProtocol.registerResponse)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return registerresponse_ != NULL ? *registerresponse_ : *default_instance().registerresponse_;
#else
  return registerresponse_ != NULL ? *registerresponse_ : *default_instance_->registerresponse_;
#endif
}
inline ::jsbn::protoc::bc::RegisterResponse* NetProtocol::mutable_registerresponse() {
  set_has_registerresponse();
  if (registerresponse_ == NULL) registerresponse_ = new ::jsbn::protoc::bc::RegisterResponse;
  // @@protoc_insertion_point(field_mutable:jsbn.protoc.bc.NetProtocol.registerResponse)
  return registerresponse_;
}
inline ::jsbn::protoc::bc::RegisterResponse* NetProtocol::release_registerresponse() {
  clear_has_registerresponse();
  ::jsbn::protoc::bc::RegisterResponse* temp = registerresponse_;
  registerresponse_ = NULL;
  return temp;
}
inline void NetProtocol::set_allocated_registerresponse(::jsbn::protoc::bc::RegisterResponse* registerresponse) {
  delete registerresponse_;
  registerresponse_ = registerresponse;
  if (registerresponse) {
    set_has_registerresponse();
  } else {
    clear_has_registerresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:jsbn.protoc.bc.NetProtocol.registerResponse)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bc
}  // namespace protoc
}  // namespace jsbn

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_jsbn_5fbc_2eproto__INCLUDED
